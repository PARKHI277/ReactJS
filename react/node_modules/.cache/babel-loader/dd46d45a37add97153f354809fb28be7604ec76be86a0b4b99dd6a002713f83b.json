{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactapp\\\\react\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // using useState\n  const [name, setName] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const inputEvent = event => {\n    console.log(event.target.value);\n    setName(event.target.value);\n  };\n  const submitButton = () => {\n    setFullName(name);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", full]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        children: [\"type = \\\"text\\\" placeHolder = \\\"What is your name\\\" onChange = \", inputEvent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitButton,\n        children: \" Click Me \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n// const SlotM = () => {\n//     let x = \"A\";\n//     let y = \"B\";\n//     let z = \"C\";\n\n//     if ((x === y) && (y === z)) {\n//         return (\n//             <>\n//                 <div className=\"slot_inner\">\n//                     <h1>\n//                         {x} {y}{z}\n//                     </h1>\n//                     <h1>This is matching</h1>\n//                     <hr />\n//                 </div>\n//             </>\n//         );\n\n//     }\n//     else {\n//         return (\n//             <>\n//                 <div className=\"slot_inner\">\n//                     <h1>\n//                         {x} {y}{z}\n//                     </h1>\n//                     <h1>This is matching</h1>\n//                     <hr />\n//                 </div>\n//             </>\n//         );\n//     }\n// }\n\n// const App = () => {\n//   return (\n//     <>\n//       <h1>\n//         {\" \"}\n//         Welcome to <span style={{ fontWeight: \"bold\" }}>Slot machine Game</span>\n//       </h1>\n//           <div className=\"slotmachine\">\n//               <slotM x=\"A\" y=\"B\" z=\"C\" />\n//               <hr />\n\n//       </div>\n//     </>\n//   );\n// }\n_s(App, \"Vptrqo4uB2sQAVHXGc/1FJQ+TDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","name","setName","fullName","setFullName","inputEvent","event","console","log","target","value","submitButton","full"],"sources":["D:/reactapp/react/src/App.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst App = () => {\r\n    // using useState\r\n    const [name, setName] = useState(\"\");\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const inputEvent = (event) =>\r\n    {\r\n    console.log(event.target.value);\r\n    setName(event.target.value);\r\n    };\r\n    const submitButton = () => {\r\n        setFullName(name);\r\n    }\r\n  return (\r\n      <>\r\n          <div>\r\n          <h1>Hello {full}</h1>\r\n      <input>type = \"text\" placeHolder = \"What is your name\" onChange = {inputEvent}</input>\r\n\r\n              <button onClick={submitButton}> Click Me </button>\r\n              </div>\r\n    </>\r\n  );\r\n};\r\n// const SlotM = () => {\r\n//     let x = \"A\";\r\n//     let y = \"B\";\r\n//     let z = \"C\";\r\n\r\n//     if ((x === y) && (y === z)) {\r\n//         return (\r\n//             <>\r\n//                 <div className=\"slot_inner\">\r\n//                     <h1>\r\n//                         {x} {y}{z}\r\n//                     </h1>\r\n//                     <h1>This is matching</h1>\r\n//                     <hr />\r\n//                 </div>\r\n//             </>\r\n//         );\r\n\r\n//     }\r\n//     else {\r\n//         return (\r\n//             <>\r\n//                 <div className=\"slot_inner\">\r\n//                     <h1>\r\n//                         {x} {y}{z}\r\n//                     </h1>\r\n//                     <h1>This is matching</h1>\r\n//                     <hr />\r\n//                 </div>\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <>\r\n//       <h1>\r\n//         {\" \"}\r\n//         Welcome to <span style={{ fontWeight: \"bold\" }}>Slot machine Game</span>\r\n//       </h1>\r\n//           <div className=\"slotmachine\">\r\n//               <slotM x=\"A\" y=\"B\" z=\"C\" />\r\n//               <hr />\r\n\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,MAAMC,GAAG,GAAG,MAAM;EAAA;EACd;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMM,UAAU,GAAIC,KAAK,IACzB;IACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC/BR,OAAO,CAACI,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EACD,MAAMC,YAAY,GAAG,MAAM;IACvBP,WAAW,CAACH,IAAI,CAAC;EACrB,CAAC;EACH,oBACI;IAAA,uBACI;MAAA,wBACA;QAAA,WAAI,QAAM,EAACW,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACzB;QAAA,WAAO,iEAA2D,EAACP,UAAU;MAAA;QAAA;QAAA;QAAA;MAAA,QAAS,eAE9E;QAAQ,OAAO,EAAEM,YAAa;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAC5C,iBACb;AAEP,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,GAvEMX,GAAG;AAAA,KAAHA,GAAG;AAyET,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}