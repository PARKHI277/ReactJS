{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactapp\\\\react\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SlotM = () => {\n  let x = \"A\";\n  let y = \"B\";\n  let z = \"C\";\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n_c = SlotM;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", \"Welcome to \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: \"Slot machine Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SlotM\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","SlotM","x","y","z","App","fontWeight"],"sources":["D:/reactapp/react/src/App.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst SlotM = () => {\r\n    let x = \"A\";\r\n    let y = \"B\";\r\n    let z = \"C\";\r\n\r\n    if ((x === y) && (y === z)) {\r\n        return (\r\n            <>\r\n                <div className=\"slot_inner\">\r\n                    <h1>\r\n                        {x} {y}{z}\r\n                    </h1>\r\n                    <h1>This is matching</h1>\r\n                    <hr />\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        \r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <div className=\"slot_inner\">\r\n                    <h1>\r\n                        {x} {y}{z}\r\n                    </h1>\r\n                    <h1>This is matching</h1>\r\n                    <hr />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>\r\n        {\" \"}\r\n        Welcome to <span style={{ fontWeight: \"bold\" }}>Slot machine Game</span>\r\n      </h1>\r\n    </>\r\n  );\r\n}\r\n\r\n    export default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAG1B,MAAMC,KAAK,GAAG,MAAM;EAChB,IAAIC,CAAC,GAAG,GAAG;EACX,IAAIC,CAAC,GAAG,GAAG;EACX,IAAIC,CAAC,GAAG,GAAG;EAEX,IAAKF,CAAC,KAAKC,CAAC,IAAMA,CAAC,KAAKC,CAAE,EAAE;IACxB,oBACI;MAAA,uBACI;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA,WACKF,CAAC,EAAC,GAAC,EAACC,CAAC,EAAEC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QACR,eACL;UAAA,UAAI;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAK,eACzB;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ,iBACP;EAIX,CAAC,MACI;IACD,oBACI;MAAA,uBACI;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA,WACKF,CAAC,EAAC,GAAC,EAACC,CAAC,EAAEC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QACR,eACL;UAAA,UAAI;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAK,eACzB;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ,iBACP;EAEX;AACJ,CAAC;AAAA,KAjCKH,KAAK;AAoCX,MAAMI,GAAG,GAAG,MAAM;EAChB,oBACE;IAAA,uBACE;MAAA,WACG,GAAG,EAAC,aACM;QAAM,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAA,UAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EACrE,iBACJ;AAEP,CAAC;AAAA,MATKD,GAAG;AAWL,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}